// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=dmux8waya, b=dmux8wayb, c=dmux8wayc, d=dmux8wayd, e=dmux8waye, f=dmux8wayf, g=dmux8wayg, h=dmux8wayh);
    RAM64(in=in, load=dmux8waya, address=address[3..8], out=ram640);
    RAM64(in=in, load=dmux8wayb, address=address[3..8], out=ram641);
    RAM64(in=in, load=dmux8wayc, address=address[3..8], out=ram642);
    RAM64(in=in, load=dmux8wayd, address=address[3..8], out=ram643);
    RAM64(in=in, load=dmux8waye, address=address[3..8], out=ram644);
    RAM64(in=in, load=dmux8wayf, address=address[3..8], out=ram645);
    RAM64(in=in, load=dmux8wayg, address=address[3..8], out=ram646);
    RAM64(in=in, load=dmux8wayh, address=address[3..8], out=ram647);
    Mux8Way16(a=ram640, b=ram641, c=ram642, d=ram643, e=ram644, f=ram645, g=ram646, h=ram647, sel=address[0..2], out=out);
}